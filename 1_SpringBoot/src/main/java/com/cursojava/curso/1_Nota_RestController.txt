
    En Spring Boot, la anotación @RestController se utiliza para marcar una clase como un
    controlador de Spring que es responsable de manejar solicitudes HTTP y generar respuestas
    en formato JSON u otros formatos. A diferencia de la anotación @Controller, @RestController
    combina la funcionalidad de las anotaciones @Controller y @ResponseBody, lo que significa
    que cada método en una clase anotada con @RestController devuelve automáticamente la respuesta
    en formato JSON o XML, según la configuración de la aplicación.

    A continuación se detallan algunas de las características y funcionalidades clave de @RestController:

    *   Gestión de solicitudes HTTP: La anotación @RestController maneja automáticamente las solicitudes
      HTTP entrantes y enruta a la clase y método correspondientes según la ruta de solicitud.

    *   Respuestas en formato JSON: Cuando se utiliza @RestController, Spring Boot convierte automáticamente
      las respuestas de los métodos del controlador en formato JSON u otro formato, según la configuración
      de la aplicación.

    *   Mapeo de rutas: Con la ayuda de la anotación @RequestMapping en los métodos del controlador, es
      posible asignar una ruta URL específica a cada método.

    *   Uso de otros verbos HTTP: Los métodos del controlador pueden ser anotados con otras anotaciones
      HTTP como @PostMapping, @PutMapping, @DeleteMapping para manejar solicitudes HTTP de otros verbos.

    *   Inyección de dependencias: Los controladores pueden tener dependencias inyectadas a través de la
      anotación @Autowired o constructores.

    En resumen, @RestController es una anotación clave en Spring Boot que se utiliza para marcar una clase
    como un controlador que maneja solicitudes HTTP y genera respuestas en formato JSON u otros formatos.
    Permite el mapeo de rutas, el uso de otros verbos HTTP y la inyección de dependencias, lo que hace que
    sea una herramienta poderosa y flexible para desarrollar aplicaciones web en Spring Boot.